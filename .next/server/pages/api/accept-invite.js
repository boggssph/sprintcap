"use strict";(()=>{var e={};e.id=642,e.ids=[642],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},3207:(e,t,r)=>{r.r(t),r.d(t,{config:()=>p,default:()=>l,routeModule:()=>c});var a={};r.r(a),r.d(a,{default:()=>handler});var i=r(1802),s=r(7153),n=r(6249),o=r(4352),d=r(6113),u=r.n(d);async function handler(e,t){if("POST"!==e.method)return t.status(405).end();let{token:r,userEmail:a}=e.body;if(!r||!a)return t.status(400).json({error:"token and userEmail required"});let i=u().createHash("sha256").update(r).digest("hex"),s=await o._.invitation.findFirst({where:{tokenHash:i}});return s?s.expiresAt<new Date?t.status(410).json({error:"expired"}):s.email.toLowerCase()!==a.toLowerCase()?t.status(403).json({error:"email mismatch"}):(await o._.invitation.update({where:{id:s.id},data:{status:"ACCEPTED"}}),t.status(200).json({ok:!0})):t.status(404).json({error:"invalid token"})}let l=(0,n.l)(a,"default"),p=(0,n.l)(a,"config"),c=new i.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/accept-invite",pathname:"/api/accept-invite",bundlePath:"",filename:""},userland:a})},4352:(e,t,r)=>{r.d(t,{_:()=>i});var a=r(3524);let i=global.prisma||new a.PrismaClient}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(3207));module.exports=r})();