"use strict";(()=>{var e={};e.id=707,e.ids=[707],e.modules={3524:e=>{e.exports=require("@prisma/client")},3227:e=>{e.exports=require("next-auth")},7449:e=>{e.exports=require("next-auth/providers/credentials")},3598:e=>{e.exports=require("next-auth/providers/google")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},6828:(e,t,r)=>{r.r(t),r.d(t,{config:()=>w,default:()=>h,routeModule:()=>m});var a={};r.r(a),r.d(a,{default:()=>handler});var i=r(1802),n=r(7153),o=r(6249),s=r(3227),u=r(5602),d=r(4352),l=r(6113),c=r.n(l);function tokenUtils_hashToken(e){return c().createHash("sha256").update(e).digest("hex")}function generateToken(e=24){return c().randomBytes(e).toString("hex")}async function listInvites(e,t){let r=await d._.user.findUnique({where:{email:e.toLowerCase()}});if(!r)throw Error("forbidden");let a=Math.min(50,t.limit||20),i={};t.status&&(i.status=t.status),t.q&&(i.email={contains:t.q,mode:"insensitive"});let n=await d._.invitation.findMany({where:i,orderBy:{createdAt:"desc"},take:a+1,...t.cursor?{cursor:{id:t.cursor},skip:1}:{}}),o=null;if(n.length>a){let e=n.pop();o=e.id}return{invites:n,nextCursor:o}}async function createInvite(e,t){let r=await d._.user.findUnique({where:{email:e.toLowerCase()}});if(!r)throw Error("forbidden");let a=t.role||"MEMBER";if(!["MEMBER","SCRUM_MASTER","ADMIN"].includes(a))throw Error("invalid role");if(("SCRUM_MASTER"===a||"ADMIN"===a)&&"ADMIN"!==r.role)throw Error("only ADMIN can invite SCRUM_MASTER or ADMIN");let i=generateToken(),n=tokenUtils_hashToken(i),o=new Date(Date.now()+2592e5),s=await d._.invitation.create({data:{email:t.email.toLowerCase(),squadId:t.squadId,tokenHash:n,expiresAt:o,invitedRole:a}});try{await d._.auditLog.create({data:{actorId:r.id,action:"CREATE_INVITE",meta:{inviteId:s.id,email:t.email,squadId:t.squadId,role:a}}})}catch(e){console.warn("Failed to write audit log",e)}return{id:s.id,token:i}}async function regenerateInvite(e,t){let r=await d._.user.findUnique({where:{email:e.toLowerCase()}});if(!r)throw Error("forbidden");if("ADMIN"!==r.role)throw Error("only ADMIN can regenerate tokens");let a=await d._.invitation.findUnique({where:{id:t}});if(!a)throw Error("invite not found");await d._.invitation.update({where:{id:t},data:{status:"EXPIRED"}});let i=generateToken(),n=tokenUtils_hashToken(i),o=new Date(Date.now()+2592e5),s=await d._.invitation.create({data:{email:a.email,squadId:a.squadId,tokenHash:n,expiresAt:o,invitedRole:a.invitedRole}});try{await d._.auditLog.create({data:{actorId:r.id,action:"REGENERATE_INVITE",meta:{inviteId:t}}})}catch(e){console.warn("Failed to write audit log",e)}return{id:s.id,token:i}}async function revokeInvite(e,t){let r=await d._.user.findUnique({where:{email:e.toLowerCase()}});if(!r)throw Error("forbidden");if("ADMIN"!==r.role)throw Error("only ADMIN can revoke invites");let a=await d._.invitation.update({where:{id:t},data:{status:"EXPIRED"}});try{await d._.auditLog.create({data:{actorId:r.id,action:"REVOKE_INVITE",meta:{inviteId:t}}})}catch(e){console.warn("Failed to write audit log",e)}try{let e=process.env.BREVO_API_KEY;e&&await fetch("https://api.brevo.com/v3/smtp/email",{method:"POST",headers:{"Content-Type":"application/json","api-key":e},body:JSON.stringify({sender:{name:"SprintCap",email:"no-reply@example.com"},to:[{email:a.email}],subject:"Your invite has been revoked",htmlContent:"<p>Your invitation to SprintCap has been revoked by an administrator.</p>"})})}catch(e){console.warn("Failed to send revoke email",e)}return{id:a.id}}async function handler(e,t){if("GET"===e.method){let r=null;if(!(r=await (0,s.getServerSession)(e,t,u.Lz))||!r.user?.email)return t.status(401).json({error:"unauthenticated"});try{let a=await listInvites(r.user.email,{limit:parseInt(e.query.limit||"20"),cursor:e.query.cursor,status:e.query.status,q:e.query.q||void 0});return t.status(200).json(a)}catch(e){return t.status(403).json({error:e.message})}}if("POST"!==e.method)return t.status(405).end();let r=e.body||{};try{let a=null;if(!(a=await (0,s.getServerSession)(e,t,u.Lz))||!a.user?.email)return t.status(401).json({error:"unauthenticated"});let i=a.user.email;if("regenerate"===r.action){let{inviteId:e}=r;if(!e)return t.status(400).json({error:"inviteId required"});try{let r=await regenerateInvite(i,e);return t.status(200).json(r)}catch(e){return t.status(403).json({error:e.message})}}if("revoke"===r.action){let{inviteId:e}=r;if(!e)return t.status(400).json({error:"inviteId required"});try{let r=await revokeInvite(i,e);return t.status(200).json(r)}catch(e){return t.status(403).json({error:e.message})}}let{email:n,squadId:o,role:d}=r;if(!n)return t.status(400).json({error:"email required"});try{let e=await createInvite(a.user.email,{email:n,squadId:o,role:d});return t.status(201).json(e)}catch(e){return t.status(400).json({error:e.message})}}catch(e){return t.status(500).json({error:e.message})}}let h=(0,o.l)(a,"default"),w=(0,o.l)(a,"config"),m=new i.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/invite",pathname:"/api/invite",bundlePath:"",filename:""},userland:a})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222,602],()=>__webpack_exec__(6828));module.exports=r})();