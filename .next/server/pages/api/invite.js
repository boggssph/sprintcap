"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/invite";
exports.ids = ["pages/api/invite"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/google":
/*!*********************************************!*\
  !*** external "next-auth/providers/google" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/google");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvite&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finvite.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvite&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finvite.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_invite_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/invite.ts */ \"(api)/./pages/api/invite.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_invite_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_invite_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/invite\",\n        pathname: \"/api/invite\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_invite_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmludml0ZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGaW52aXRlLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3ByaW50LWNhcGFjaXR5LWFwcC8/ZmEyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2ludml0ZS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2ludml0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2ludml0ZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvite&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finvite.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   nextAuthConfig: () => (/* binding */ nextAuthConfig),\n/* harmony export */   validateAuthEnv: () => (/* binding */ validateAuthEnv)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/google */ \"next-auth/providers/google\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n\n\n\nconst authOptions = {\n    providers: [\n        // Enable Google provider if keys provided\n        ...process.env.GOOGLE_CLIENT_ID && process.env.GOOGLE_CLIENT_SECRET ? [\n            next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0___default()({\n                clientId: process.env.GOOGLE_CLIENT_ID,\n                clientSecret: process.env.GOOGLE_CLIENT_SECRET\n            })\n        ] : [],\n        // Credentials provider for local dev/testing only\n        ... true ? [\n            next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n                name: \"Dev Sign-in\",\n                credentials: {\n                    email: {\n                        label: \"Email\",\n                        type: \"text\"\n                    },\n                    name: {\n                        label: \"Name\",\n                        type: \"text\"\n                    }\n                },\n                async authorize (credentials) {\n                    if (!credentials?.email) return null;\n                    return {\n                        id: credentials.email,\n                        email: credentials.email,\n                        name: credentials.name || credentials.email\n                    };\n                }\n            })\n        ] : 0\n    ],\n    callbacks: {\n        async signIn ({ user }) {\n            if (!user?.email) return false;\n            const email = user.email.toLowerCase();\n            // If user already exists, allow sign in and update metadata\n            const existing = await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n                where: {\n                    email\n                }\n            });\n            if (existing) {\n                try {\n                    await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.update({\n                        where: {\n                            email\n                        },\n                        data: {\n                            name: user.name ?? existing.name,\n                            image: user.image ?? existing.image\n                        }\n                    });\n                } catch (e) {\n                    console.warn(\"Failed to update existing user metadata\", e);\n                }\n                return true;\n            }\n            // New user: bootstrap the first signer as ADMIN (application admin)\n            const adminCount = await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.count({\n                where: {\n                    role: \"ADMIN\"\n                }\n            });\n            if (adminCount === 0) {\n                await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.create({\n                    data: {\n                        email,\n                        name: user.name,\n                        image: user.image,\n                        role: \"ADMIN\"\n                    }\n                });\n                return true;\n            }\n            // Otherwise, allow registration only if there's a pending invitation for this email\n            const invite = await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.invitation.findFirst({\n                where: {\n                    email,\n                    status: \"PENDING\"\n                }\n            });\n            if (invite) {\n                const created = await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.create({\n                    data: {\n                        email,\n                        name: user.name,\n                        image: user.image,\n                        role: \"MEMBER\"\n                    }\n                });\n                try {\n                    if (invite.squadId) {\n                        await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.squadMember.create({\n                            data: {\n                                userId: created.id,\n                                squadId: invite.squadId\n                            }\n                        });\n                    }\n                    await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.invitation.update({\n                        where: {\n                            id: invite.id\n                        },\n                        data: {\n                            status: \"ACCEPTED\"\n                        }\n                    });\n                } catch (e) {\n                    console.warn(\"Failed to attach invited user to squad or update invitation\", e);\n                }\n                return true;\n            }\n            // No invite and not the bootstrap scenario — block sign in and redirect to a friendly page\n            return \"/auth/no-access\";\n        },\n        async jwt ({ token, user }) {\n            // When a user signs in, attach their DB role to the token\n            if (user?.email) {\n                const dbUser = await _prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n                    where: {\n                        email: user.email.toLowerCase()\n                    }\n                });\n                token.role = dbUser?.role ?? \"MEMBER\";\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            session.user.role = token.role ?? \"MEMBER\";\n            return session;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    }\n};\n// Expose secret and debug flag for NextAuth when imported elsewhere\nconst nextAuthConfig = {\n    secret: process.env.NEXTAUTH_SECRET,\n    debug: \"development\" !== \"production\"\n};\nfunction validateAuthEnv() {\n    const missing = [];\n    if (!process.env.NEXTAUTH_SECRET) missing.push(\"NEXTAUTH_SECRET\");\n    if (!process.env.NEXTAUTH_URL && !process.env.VERCEL_URL) missing.push(\"NEXTAUTH_URL\");\n    // Google provider requires both keys when enabled\n    if (process.env.GOOGLE_CLIENT_ID && !process.env.GOOGLE_CLIENT_SECRET) missing.push(\"GOOGLE_CLIENT_SECRET\");\n    if (process.env.GOOGLE_CLIENT_SECRET && !process.env.GOOGLE_CLIENT_ID) missing.push(\"GOOGLE_CLIENT_ID\");\n    if (missing.length) {\n        const msg = `Missing required env vars for NextAuth: ${missing.join(\", \")}`;\n        if (false) {} else {\n            console.warn(msg);\n        }\n    }\n    return missing;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/auth.ts\n");

/***/ }),

/***/ "(api)/./lib/inviteService.ts":
/*!******************************!*\
  !*** ./lib/inviteService.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInvite: () => (/* binding */ createInvite),\n/* harmony export */   listInvites: () => (/* binding */ listInvites),\n/* harmony export */   regenerateInvite: () => (/* binding */ regenerateInvite),\n/* harmony export */   revokeInvite: () => (/* binding */ revokeInvite)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(api)/./lib/prisma.ts\");\n/* harmony import */ var _tokenUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokenUtils */ \"(api)/./lib/tokenUtils.ts\");\n\n\nasync function listInvites(actorEmail, opts) {\n    const actor = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n        where: {\n            email: actorEmail.toLowerCase()\n        }\n    });\n    if (!actor) throw new Error(\"forbidden\");\n    const limit = Math.min(50, opts.limit || 20);\n    const where = {};\n    if (opts.status) where.status = opts.status;\n    if (opts.q) where.email = {\n        contains: opts.q,\n        mode: \"insensitive\"\n    };\n    const invites = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.invitation.findMany({\n        where,\n        orderBy: {\n            createdAt: \"desc\"\n        },\n        take: limit + 1,\n        ...opts.cursor ? {\n            cursor: {\n                id: opts.cursor\n            },\n            skip: 1\n        } : {}\n    });\n    let nextCursor = null;\n    if (invites.length > limit) {\n        const next = invites.pop();\n        nextCursor = next.id;\n    }\n    return {\n        invites,\n        nextCursor\n    };\n}\nasync function createInvite(actorEmail, params) {\n    const actor = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n        where: {\n            email: actorEmail.toLowerCase()\n        }\n    });\n    if (!actor) throw new Error(\"forbidden\");\n    const desiredRole = params.role || \"MEMBER\";\n    const allowedRoles = [\n        \"MEMBER\",\n        \"SCRUM_MASTER\",\n        \"ADMIN\"\n    ];\n    if (!allowedRoles.includes(desiredRole)) throw new Error(\"invalid role\");\n    if ((desiredRole === \"SCRUM_MASTER\" || desiredRole === \"ADMIN\") && actor.role !== \"ADMIN\") {\n        throw new Error(\"only ADMIN can invite SCRUM_MASTER or ADMIN\");\n    }\n    const token = (0,_tokenUtils__WEBPACK_IMPORTED_MODULE_1__.generateToken)();\n    const tokenHash = (0,_tokenUtils__WEBPACK_IMPORTED_MODULE_1__.hashToken)(token);\n    const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);\n    const invite = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.invitation.create({\n        data: {\n            email: params.email,\n            squadId: params.squadId,\n            tokenHash,\n            expiresAt,\n            invitedRole: desiredRole\n        }\n    });\n    try {\n        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.auditLog.create({\n            data: {\n                actorId: actor.id,\n                action: \"CREATE_INVITE\",\n                meta: {\n                    inviteId: invite.id,\n                    email: params.email,\n                    squadId: params.squadId,\n                    role: desiredRole\n                }\n            }\n        });\n    } catch (e) {\n        console.warn(\"Failed to write audit log\", e);\n    }\n    return {\n        id: invite.id,\n        token\n    };\n}\nasync function regenerateInvite(actorEmail, inviteId) {\n    const actor = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n        where: {\n            email: actorEmail.toLowerCase()\n        }\n    });\n    if (!actor) throw new Error(\"forbidden\");\n    if (actor.role !== \"ADMIN\") throw new Error(\"only ADMIN can regenerate tokens\");\n    const newToken = (0,_tokenUtils__WEBPACK_IMPORTED_MODULE_1__.generateToken)();\n    const newTokenHash = (0,_tokenUtils__WEBPACK_IMPORTED_MODULE_1__.hashToken)(newToken);\n    const newExpires = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);\n    const updated = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.invitation.update({\n        where: {\n            id: inviteId\n        },\n        data: {\n            tokenHash: newTokenHash,\n            expiresAt: newExpires\n        }\n    });\n    try {\n        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.auditLog.create({\n            data: {\n                actorId: actor.id,\n                action: \"REGENERATE_INVITE\",\n                meta: {\n                    inviteId\n                }\n            }\n        });\n    } catch (e) {\n        console.warn(\"Failed to write audit log\", e);\n    }\n    return {\n        id: updated.id,\n        token: newToken\n    };\n}\nasync function revokeInvite(actorEmail, inviteId) {\n    const actor = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n        where: {\n            email: actorEmail.toLowerCase()\n        }\n    });\n    if (!actor) throw new Error(\"forbidden\");\n    if (actor.role !== \"ADMIN\") throw new Error(\"only ADMIN can revoke invites\");\n    const updated = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.invitation.update({\n        where: {\n            id: inviteId\n        },\n        data: {\n            status: \"EXPIRED\"\n        }\n    });\n    try {\n        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.auditLog.create({\n            data: {\n                actorId: actor.id,\n                action: \"REVOKE_INVITE\",\n                meta: {\n                    inviteId\n                }\n            }\n        });\n    } catch (e) {\n        console.warn(\"Failed to write audit log\", e);\n    }\n    // notify via brevo if configured\n    try {\n        const brevoKey = process.env.BREVO_API_KEY;\n        if (brevoKey) {\n            await fetch(\"https://api.brevo.com/v3/smtp/email\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": brevoKey\n                },\n                body: JSON.stringify({\n                    sender: {\n                        name: \"SprintCap\",\n                        email: \"no-reply@example.com\"\n                    },\n                    to: [\n                        {\n                            email: updated.email\n                        }\n                    ],\n                    subject: \"Your invite has been revoked\",\n                    htmlContent: `<p>Your invitation to SprintCap has been revoked by an administrator.</p>`\n                })\n            });\n        }\n    } catch (e) {\n        console.warn(\"Failed to send revoke email\", e);\n    }\n    return {\n        id: updated.id\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/inviteService.ts\n");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) global.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQU90QyxNQUFNQyxTQUFTQyxPQUFPRCxNQUFNLElBQUksSUFBSUQsd0RBQVlBLEdBQUU7QUFFekQsSUFBSUcsSUFBeUIsRUFBY0QsT0FBT0QsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NwcmludC1jYXBhY2l0eS1hcHAvLi9saWIvcHJpc21hLnRzPzk4MjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXZhclxuICB2YXIgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWRcbn1cblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9IGdsb2JhbC5wcmlzbWEgfHwgbmV3IFByaXNtYUNsaWVudCgpXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWwucHJpc21hID0gcHJpc21hXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiZ2xvYmFsIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./lib/tokenUtils.ts":
/*!***************************!*\
  !*** ./lib/tokenUtils.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   hashToken: () => (/* binding */ hashToken)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction hashToken(token) {\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"sha256\").update(token).digest(\"hex\");\n}\nfunction generateToken(bytes = 24) {\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(bytes).toString(\"hex\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvdG9rZW5VdGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJCO0FBRXBCLFNBQVNDLFVBQVVDLEtBQWE7SUFDckMsT0FBT0Ysd0RBQWlCLENBQUMsVUFBVUksTUFBTSxDQUFDRixPQUFPRyxNQUFNLENBQUM7QUFDMUQ7QUFFTyxTQUFTQyxjQUFjQyxRQUFRLEVBQUU7SUFDdEMsT0FBT1AseURBQWtCLENBQUNPLE9BQU9FLFFBQVEsQ0FBQztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NwcmludC1jYXBhY2l0eS1hcHAvLi9saWIvdG9rZW5VdGlscy50cz9jNDVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJ1xuXG5leHBvcnQgZnVuY3Rpb24gaGFzaFRva2VuKHRva2VuOiBzdHJpbmcpIHtcbiAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUodG9rZW4pLmRpZ2VzdCgnaGV4Jylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlVG9rZW4oYnl0ZXMgPSAyNCkge1xuICByZXR1cm4gY3J5cHRvLnJhbmRvbUJ5dGVzKGJ5dGVzKS50b1N0cmluZygnaGV4Jylcbn1cbiJdLCJuYW1lcyI6WyJjcnlwdG8iLCJoYXNoVG9rZW4iLCJ0b2tlbiIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJnZW5lcmF0ZVRva2VuIiwiYnl0ZXMiLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/tokenUtils.ts\n");

/***/ }),

/***/ "(api)/./pages/api/invite.ts":
/*!*****************************!*\
  !*** ./pages/api/invite.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/auth */ \"(api)/./lib/auth.ts\");\n/* harmony import */ var _lib_inviteService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/inviteService */ \"(api)/./lib/inviteService.ts\");\n\n\n\nasync function handler(req, res) {\n    // Allow listing invites\n    if (req.method === \"GET\") {\n        // Dev/test helper: allow bypassing NextAuth when NODE_ENV !== 'production' by providing\n        // an `x-test-user` header or `?test_user=` query param. This helps E2E tests avoid stubbing auth.\n        let session = null;\n        if (true) {\n            const testUser = req.headers[\"x-test-user\"] || req.query.test_user;\n            if (testUser) {\n                session = {\n                    user: {\n                        email: testUser.toLowerCase(),\n                        name: testUser\n                    }\n                };\n            }\n        }\n        if (!session) session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n        if (!session || !session.user?.email) return res.status(401).json({\n            error: \"unauthenticated\"\n        });\n        try {\n            const data = await (0,_lib_inviteService__WEBPACK_IMPORTED_MODULE_2__.listInvites)(session.user.email, {\n                limit: parseInt(req.query.limit || \"20\"),\n                cursor: req.query.cursor,\n                status: req.query.status,\n                q: req.query.q || undefined\n            });\n            return res.status(200).json(data);\n        } catch (e) {\n            return res.status(403).json({\n                error: e.message\n            });\n        }\n    }\n    if (req.method !== \"POST\") return res.status(405).end();\n    const body = req.body || {};\n    try {\n        // Dev/test helper: allow bypassing NextAuth when NODE_ENV !== 'production' by providing\n        // an `x-test-user` header or `?test_user=` query param. This helps E2E tests avoid stubbing auth.\n        let session = null;\n        if (true) {\n            const testUser = req.headers[\"x-test-user\"] || req.query.test_user;\n            if (testUser) {\n                session = {\n                    user: {\n                        email: testUser.toLowerCase(),\n                        name: testUser\n                    }\n                };\n            }\n        }\n        if (!session) session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _lib_auth__WEBPACK_IMPORTED_MODULE_1__.authOptions);\n        if (!session || !session.user?.email) return res.status(401).json({\n            error: \"unauthenticated\"\n        });\n        const actorEmail = session.user.email;\n        if (body.action === \"regenerate\") {\n            const { inviteId } = body;\n            if (!inviteId) return res.status(400).json({\n                error: \"inviteId required\"\n            });\n            try {\n                const data = await (0,_lib_inviteService__WEBPACK_IMPORTED_MODULE_2__.regenerateInvite)(actorEmail, inviteId);\n                return res.status(200).json(data);\n            } catch (e) {\n                return res.status(403).json({\n                    error: e.message\n                });\n            }\n        }\n        if (body.action === \"revoke\") {\n            const { inviteId } = body;\n            if (!inviteId) return res.status(400).json({\n                error: \"inviteId required\"\n            });\n            try {\n                const data = await (0,_lib_inviteService__WEBPACK_IMPORTED_MODULE_2__.revokeInvite)(actorEmail, inviteId);\n                return res.status(200).json(data);\n            } catch (e) {\n                return res.status(403).json({\n                    error: e.message\n                });\n            }\n        }\n        // create\n        const { email, squadId, role } = body;\n        if (!email) return res.status(400).json({\n            error: \"email required\"\n        });\n        try {\n            const data = await (0,_lib_inviteService__WEBPACK_IMPORTED_MODULE_2__.createInvite)(session.user.email, {\n                email,\n                squadId,\n                role\n            });\n            return res.status(201).json(data);\n        } catch (e) {\n            return res.status(400).json({\n                error: e.message\n            });\n        }\n    } catch (e) {\n        return res.status(500).json({\n            error: e.message\n        });\n    }\n} // Note: the route above handles GET and POST. To support revoke via POST action: 'revoke'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/invite.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvite&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finvite.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();