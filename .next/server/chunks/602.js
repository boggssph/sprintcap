"use strict";exports.id=602,exports.ids=[602],exports.modules={5602:(e,a,i)=>{for(let e of(i.d(a,{Lz:()=>d,Iz:()=>u,yg:()=>validateAuthEnv}),["NEXTAUTH_URL","NEXTAUTH_URL_INTERNAL","VERCEL_URL","REDIS_URL","BREVO_API_KEY","NEXTAUTH_SECRET","BASE_URL"])){let a=process.env[e];"string"==typeof a&&""===a.trim()&&(console.warn(`[env] ${e} is an empty string; treating as undefined to avoid URL parsing errors.`),delete process.env[e])}var s=i(3598),t=i.n(s);i(7449);var r=i(4352),n=i(6113),o=i.n(n);function hashPII(e){return e?o().createHash("sha256").update(e).digest("hex").slice(0,16):null}function authLog(e,a={}){let i={ts:new Date().toISOString(),event:e,...a};console.info("[auth]",JSON.stringify(i))}let d={providers:[...process.env.GOOGLE_CLIENT_ID&&process.env.GOOGLE_CLIENT_SECRET?[t()({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET})]:[]],callbacks:{async signIn({user:e}){if(authLog("signIn_attempt",{provider:e?.provider||"unknown",emailHash:hashPII(e?.email||void 0)}),!e?.email)return authLog("signIn_failed_no_email",{emailHash:hashPII(e?.email||void 0)}),!1;let a=e.email.toLowerCase().trim(),i=e.id||e.sub||e.providerId||null,s=null;if(i&&(s=await r._.user.findFirst({where:{providerId:{equals:i}}})),s||(s=await r._.user.findUnique({where:{email:a}})),s){try{let a={name:e.name??s.name,image:e.image??s.image};i&&!s.providerId&&(a.providerId=i),await r._.user.update({where:{id:s.id},data:a})}catch(e){console.warn("Failed to update existing user metadata",e)}return authLog("signIn_success",{emailHash:hashPII(a||void 0),userId:s.id,role:s.role}),!0}let t=await r._.user.count({where:{role:"ADMIN"}});if(0===t){let s=await r._.user.create({data:{email:a,name:e.name,image:e.image,providerId:i??void 0,role:"ADMIN"}});return authLog("signIn_bootstrap_admin",{emailHash:hashPII(a||void 0),userId:s.id}),!0}let n=await r._.invitation.findFirst({where:{email:a,status:"PENDING"}});if(n){let s=await r._.user.create({data:{email:a,name:e.name,image:e.image,providerId:i??void 0,role:"MEMBER"}});try{n.squadId&&await r._.squadMember.create({data:{userId:s.id,squadId:n.squadId}}),await r._.invitation.update({where:{id:n.id},data:{status:"ACCEPTED"}})}catch(e){console.warn("Failed to attach invited user to squad or update invitation",e)}return authLog("signIn_success_invite",{emailHash:hashPII(a||void 0),userId:s.id,inviteId:n.id}),!0}return authLog("signIn_denied_no_invite",{emailHash:hashPII(a||void 0)}),"/auth/no-access"},async jwt({token:e,user:a}){if(a?.email){let i=await r._.user.findUnique({where:{email:a.email.toLowerCase()}});e.role=i?.role??"MEMBER"}return e},session:async({session:e,token:a})=>(e.user.role=a.role??"MEMBER",e)},session:{strategy:"jwt"},useSecureCookies:!0,cookies:void 0},u={secret:process.env.NEXTAUTH_SECRET,debug:!1};function validateAuthEnv(){let e=[];if(process.env.NEXTAUTH_SECRET||e.push("NEXTAUTH_SECRET"),process.env.NEXTAUTH_URL||process.env.VERCEL_URL||e.push("NEXTAUTH_URL"),process.env.GOOGLE_CLIENT_ID&&!process.env.GOOGLE_CLIENT_SECRET&&e.push("GOOGLE_CLIENT_SECRET"),process.env.GOOGLE_CLIENT_SECRET&&!process.env.GOOGLE_CLIENT_ID&&e.push("GOOGLE_CLIENT_ID"),e.length){let a=`Missing required env vars for NextAuth: ${e.join(", ")}`;console.error(a)}return e}},4352:(e,a,i)=>{i.d(a,{_:()=>t});var s=i(3524);let t=global.prisma||new s.PrismaClient}};