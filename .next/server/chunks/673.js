"use strict";exports.id=673,exports.ids=[673],exports.modules={9966:(e,t,a)=>{a.d(t,{Ol:()=>acceptInvite,l8:()=>createInvite,aG:()=>regenerateInvite,GY:()=>revokeInvite});var i=a(5204),r=a(6113),n=a.n(r);function hashToken(e){return n().createHash("sha256").update(e).digest("hex")}function generateToken(e=24){return n().randomBytes(e).toString("hex")}async function createInvite(e,t){let a=await i._.user.findUnique({where:{email:e.toLowerCase()}});if(!a)throw Error("forbidden");let r=t.role||"MEMBER";if(!["MEMBER","SCRUM_MASTER","ADMIN"].includes(r))throw Error("invalid role");if(("SCRUM_MASTER"===r||"ADMIN"===r)&&"ADMIN"!==a.role)throw Error("only ADMIN can invite SCRUM_MASTER or ADMIN");let n=generateToken(),o=hashToken(n),d=new Date(Date.now()+2592e5),s=await i._.invitation.create({data:{email:t.email.toLowerCase(),squadId:t.squadId,tokenHash:o,expiresAt:d,invitedRole:r}});try{await i._.auditLog.create({data:{actorId:a.id,action:"CREATE_INVITE",meta:{inviteId:s.id,email:t.email,squadId:t.squadId,role:r}}})}catch(e){console.warn("Failed to write audit log",e)}return{id:s.id,token:n}}async function regenerateInvite(e,t){let a=await i._.user.findUnique({where:{email:e.toLowerCase()}});if(!a)throw Error("forbidden");if("ADMIN"!==a.role)throw Error("only ADMIN can regenerate tokens");let r=await i._.invitation.findUnique({where:{id:t}});if(!r)throw Error("invite not found");await i._.invitation.update({where:{id:t},data:{status:"EXPIRED"}});let n=generateToken(),o=hashToken(n),d=new Date(Date.now()+2592e5),s=await i._.invitation.create({data:{email:r.email,squadId:r.squadId,tokenHash:o,expiresAt:d,invitedRole:r.invitedRole}});try{await i._.auditLog.create({data:{actorId:a.id,action:"REGENERATE_INVITE",meta:{inviteId:t}}})}catch(e){console.warn("Failed to write audit log",e)}return{id:s.id,token:n}}async function acceptInvite(e,t){let a=hashToken(e),r=new Date,n=await i._.invitation.findFirst({where:{tokenHash:a,status:"PENDING",expiresAt:{gt:r}}});if(!n)throw Error("invalid or expired token");let o=t.toLowerCase(),d=await i._.user.findUnique({where:{email:o}});d||(d=await i._.user.create({data:{email:o,role:"MEMBER"}}));try{n.squadId&&await i._.squadMember.create({data:{userId:d.id,squadId:n.squadId}}),await i._.invitation.update({where:{id:n.id},data:{status:"ACCEPTED"}}),await i._.auditLog.create({data:{actorId:d.id,action:"ACCEPT_INVITE",meta:{inviteId:n.id,email:o}}})}catch(e){console.warn("Failed to finalize invite acceptance",e)}return{success:!0,userId:d.id}}async function revokeInvite(e,t){let a=await i._.user.findUnique({where:{email:e.toLowerCase()}});if(!a)throw Error("forbidden");if("ADMIN"!==a.role)throw Error("only ADMIN can revoke invites");let r=await i._.invitation.update({where:{id:t},data:{status:"EXPIRED"}});try{await i._.auditLog.create({data:{actorId:a.id,action:"REVOKE_INVITE",meta:{inviteId:t}}})}catch(e){console.warn("Failed to write audit log",e)}try{let e=process.env.BREVO_API_KEY;e&&await fetch("https://api.brevo.com/v3/smtp/email",{method:"POST",headers:{"Content-Type":"application/json","api-key":e},body:JSON.stringify({sender:{name:"SprintCap",email:"no-reply@example.com"},to:[{email:r.email}],subject:"Your invite has been revoked",htmlContent:"<p>Your invitation to SprintCap has been revoked by an administrator.</p>"})})}catch(e){console.warn("Failed to send revoke email",e)}return{id:r.id}}},5204:(e,t,a)=>{a.d(t,{_:()=>r});var i=a(3524);let r=global.prisma||new i.PrismaClient},9625:(e,t,a)=>{a.d(t,{h:()=>rateLimit});var i=a(6277),r=a.n(i);let n=process.env.REDIS_URL||"",o=null;async function redisRateLimit(e,t=60,a=3600){if(!o)return{allowed:!0,remaining:t};let i=Math.floor(Date.now()/1e3),r=i-a,n=`rl:${e}`;await o.zremrangebyscore(n,0,r);let d=await o.zcard(n);return d>=t?{allowed:!1,remaining:0}:(await o.zadd(n,i,`${i}:${Math.random().toString(36).slice(2)}`),await o.expire(n,a+60),{allowed:!0,remaining:t-(d+1)})}n&&(o=new(r())(n));let d=new Map;async function rateLimit(e,t=60,a=3600){if(process.env.REDIS_URL)try{return await redisRateLimit(e,t,a)}catch(e){console.warn("Redis rate limit failed, falling back to in-memory",e)}let i=Date.now(),r=d.get(e)||{tokens:t,last:i},n=(i-r.last)/1e3,o=n/a*t;return(r.tokens=Math.min(t,r.tokens+o),r.last=i,r.tokens>=1)?(r.tokens-=1,d.set(e,r),{allowed:!0,remaining:Math.floor(r.tokens)}):(d.set(e,r),{allowed:!1,remaining:0})}}};